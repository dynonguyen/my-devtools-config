// Place your key bindings in this file to override the defaultsauto[]
[
	// Matching vim mapping
	{
		"key": "alt+j",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+k",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+j",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+k",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+b",
		"command": "workbench.files.action.showActiveFileInExplorer"
	},

	// Split pane and navigate
	{
		"key": "ctrl+left",
		"command": "workbench.action.splitEditorLeft"
	},
	{
		"key": "ctrl+right",
		"command": "workbench.action.splitEditorRight"
	},
	{
		"key": "ctrl+down",
		"command": "workbench.action.splitEditorDown"
	},
	{
		"key": "ctrl+up",
		"command": "workbench.action.splitEditorUp"
	},
	{
		"key": "ctrl+shift+w",
		"command": "workbench.action.closeOtherEditors"
	},
	{
		"key": "ctrl+shift+left",
		"command": "workbench.action.terminal.resizePaneLeft"
	},
	{
		"key": "shift+alt+right",
		"command": "workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+right",
		"command": "workbench.action.terminal.resizePaneRight"
	},

	// HTML wrap tag
	{
		"key": "alt+w",
		"command": "editor.emmet.action.wrapWithAbbreviation"
	},
	{
		"key": "shift+alt+w",
		"command": "editor.emmet.action.updateTag"
	},

	// Others
	{
		"key": "ctrl+k ctrl+backspace",
		"command": "editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+u",
		"command": "workbench.action.openSnippets"
	},
	{
		"key": "shift+win+z",
		"command": "workbench.action.toggleZenMode"
	},
	{
		"key": "ctrl+shift+/",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+s",
		"command": "workbench.action.files.saveFiles"
	},
	{
		"key": "ctrl+,",
		"command": "workbench.action.openSettingsJson"
	},
	{
		"key": "ctrl+k ctrl+p",
		"command": "workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "ctrl+k ctrl+p",
		"command": "workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "alt+`",
		"command": "workbench.action.closePanel"
	},
	{
		"key": "alt+r",
		"command": "cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "alt+h",
		"command": "workbench.action.previousEditor"
	},
	{
		"key": "alt+l",
		"command": "workbench.action.nextEditor"
	},
	{
		"key": "shift+alt+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+s",
		"command": "-workbench.action.files.saveLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+shift+u",
		"command": "-workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "ctrl+shift+5",
		"command": "-workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.reloadWindow",
		"when": "isDevelopment"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.openRecent"
	},
	{
		"key": "ctrl+shift+right",
		"command": "-cursorWordEndRightSelect",
		"when": "textInputFocus && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+,",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "ctrl+k ctrl+p",
		"command": "-workbench.action.showAllEditors"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "shift+right",
		"command": "cursorRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+right",
		"command": "-cursorRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+right",
		"command": "cursorColumnSelectRight",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+right",
		"command": "-cursorColumnSelectRight",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+alt+right",
		"command": "editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+right",
		"command": "-editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+u",
		"command": "-cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "alt+l",
		"command": "-toggleSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "workbench.files.action.collapseExplorerFolders"
	},
	{
		"key": "alt+t",
		"command": "-dynoFileUtils.useTemplate"
	},
	{
		"key": "ctrl+alt+t",
		"command": "dyno-translator.translator-box"
	},
	{
		"key": "ctrl+m",
		"command": "-editor.action.toggleTabFocusMode"
	},
	{
		"key": "ctrl+m",
		"command": "-extension.vim_ctrl+m",
		"when": "editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
	},
	{
		"key": "ctrl+m",
		"command": "editor.action.toggleMinimap"
	},
	{
		"key": "alt+c",
		"command": "phpConstructor.insert"
	},
	{
		"key": "ctrl+alt+n",
		"command": "dynoFileUtils.newItemsAtCurrentPath"
	},
	{
		"key": "ctrl+k ctrl+h",
		"command": "editor.action.selectToBracket"
	},
	{
		"key": "alt+t",
		"command": "todo-tree-view.focus"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+left",
		"command": "workbench.action.decreaseViewSize"
	},
	{
		"key": "alt+right",
		"command": "workbench.action.increaseViewSize"
	},
	{
		"key": "alt+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+p",
		"command": "workbench.profiles.actions.switchProfile"
	}
]
