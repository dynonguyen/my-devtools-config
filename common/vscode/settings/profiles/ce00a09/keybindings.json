// Place your key bindings in this file to override the defaultsauto[]
[
	// Vim mapping
	{
		"key": "alt+j",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+k",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+j",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+k",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{ "key": "alt+h", "command": "workbench.action.previousEditor" },
	{ "key": "alt+l", "command": "workbench.action.nextEditor" },

	// Split pane and navigate between panes
	{ "key": "ctrl+left", "command": "workbench.action.splitEditorLeft" },
	{ "key": "ctrl+right", "command": "workbench.action.splitEditorRight" },

	// Resize pane/terminal
	{ "key": "shift+alt+left", "command": "workbench.action.terminal.resizePaneLeft" },
	{ "key": "shift+alt+right", "command": "workbench.action.terminal.resizePaneRight" },
	{ "key": "cmd+alt+left", "command": "workbench.action.increaseViewSize" },
	{ "key": "cmd+alt+right", "command": "workbench.action.decreaseViewSize" },

	// HTML wrap tag
	{ "key": "alt+w", "command": "editor.emmet.action.wrapWithAbbreviation" },
	{ "key": "shift+alt+w", "command": "editor.emmet.action.updateTag" },

	// Source action
	{
		"key": "cmd+shift+i",
		"command": "editor.action.sourceAction",
		"args": { "kind": "source.addMissingImports", "apply": "first" }
	},

	// Workbench/editors
	{ "key": "alt+b", "command": "workbench.view.explorer", "when": "viewContainer.workbench.view.explorer.enabled" },
	{ "key": "cmd+shift+w", "command": "workbench.action.closeOtherEditors" },

	// Quick open
	{ "key": "cmd+k cmd+u", "command": "workbench.action.openSnippets" },
	{ "key": "cmd+,", "command": "workbench.action.openSettingsJson" },
	{
		"key": "cmd+`",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{ "key": "shift+cmd+`", "command": "workbench.action.terminal.openNativeConsole" },

	// Extensions
	{ "key": "ctrl+alt+delete", "command": "dynoFileUtils.deleteFile" },

	// Others
	{
		"key": "cmd+shift+/",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{ "key": "cmd+shift+s", "command": "workbench.action.files.saveFiles" },
	{ "key": "alt+cmd+m", "command": "editor.action.toggleMinimap" },
	{
		"key": "ctrl+space",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "cmd+h",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "cmd+k cmd+c",
		"command": "workbench.files.action.collapseExplorerFolders"
	},
	{
		"key": "ctrl+r",
		"command": "references-view.findReferences",
		"when": "editorHasReferenceProvider"
	},

	// Remove system keybindings
	{
		"key": "shift+alt+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+cmd+e",
		"command": "-workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "cmd+shift+s",
		"command": "-workbench.action.files.saveLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "cmd+shift+u",
		"command": "-workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "cmd+shift+5",
		"command": "-workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "cmd+r",
		"command": "-workbench.action.reloadWindow",
		"when": "isDevelopment"
	},
	{
		"key": "cmd+r",
		"command": "-workbench.action.openRecent"
	},
	{
		"key": "cmd+shift+right",
		"command": "-cursorWordEndRightSelect",
		"when": "textInputFocus && !accessibilityModeEnabled"
	},
	{
		"key": "cmd+,",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "cmd+k cmd+p",
		"command": "-workbench.action.showAllEditors"
	},
	{
		"key": "cmd+k shift+enter",
		"command": "-workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "cmd+k shift+enter",
		"command": "-workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "shift+alt+right",
		"command": "-editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+k cmd+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "cmd+u",
		"command": "-cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "alt+l",
		"command": "-toggleSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "cmd+pageup",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "cmd+pagedown",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "alt+t",
		"command": "-dynoFileUtils.useTemplate"
	},
	{
		"key": "cmd+m",
		"command": "-editor.action.toggleTabFocusMode"
	},
	{
		"key": "cmd+m",
		"command": "-extension.vim_cmd+m"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.terminal.focusPreviousPane"
	},
	{
		"key": "alt+right",
		"command": "-workbench.action.terminal.focusNextPane"
	},
	{
		"key": "ctrl+h",
		"command": "-deleteLeft",
		"when": "textInputFocus"
	},
	{
		"key": "alt+cmd+f",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "cmd+d",
		"command": "-extension.vim_cmd+d",
		"when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
	},
	{
		"key": "cmd+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "ctrl+space",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "alt+escape",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "alt+delete",
		"command": "-dynoFileUtils.deleteFile"
	},
	{
		"key": "shift+cmd+t",
		"command": "-headwind.sortTailwindClasses",
		"when": "editorFocus"
	},
	{
		"key": "shift+cmd+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "shift+cmd+s",
		"command": "-workbench.action.files.saveAs"
	},
	{
		"key": "cmd+e",
		"command": "-actions.findWithSelection"
	},
	{
		"key": "ctrl+shift+cmd+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+i",
		"command": "references-view.findImplementations"
	},
	{
		"key": "f2",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "alt+r",
		"command": "typescript.findAllFileReferences"
	}
	// Recent added keybindings
]
